<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="top.suilian.aio.dao.RobotMapper">
  <resultMap id="BaseResultMap" type="top.suilian.aio.model.Robot">
    <id column="robot_id" jdbcType="INTEGER" property="robotId" />
    <result column="member_id" jdbcType="INTEGER" property="memberId" />
    <result column="strategy_id" jdbcType="INTEGER" property="strategyId" />
    <result column="service_ip" jdbcType="VARCHAR" property="serviceIp" />
    <result column="service_port" jdbcType="VARCHAR" property="servicePort" />
    <result column="new_ip" jdbcType="VARCHAR" property="newIp" />
    <result column="new_port" jdbcType="VARCHAR" property="newPort" />
    <result column="start_date" jdbcType="DATE" property="startDate" />
    <result column="end_date" jdbcType="DATE" property="endDate" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="is_update" jdbcType="BIT" property="isUpdate" />
    <result column="status" jdbcType="BIT" property="status" />
    <result column="operation_status" jdbcType="BIT" property="operationStatus" />
    <result column="active" jdbcType="BIT" property="active" />
    <result column="deleted" jdbcType="BIT" property="deleted" />
    <result column="created_at" jdbcType="TIMESTAMP" property="createdAt" />
    <result column="updated_at" jdbcType="TIMESTAMP" property="updatedAt" />
    <result column="type" jdbcType="BIT" property="type" />
  </resultMap>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from robot
    where robot_id = #{robotId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="top.suilian.aio.model.Robot">
    insert into robot (robot_id, member_id, strategy_id, 
      service_ip, service_port, new_ip, 
      new_port, start_date, end_date, 
      name, is_update, status, operation_status, 
      active, deleted, created_at, 
      updated_at, type)
    values (#{robotId,jdbcType=INTEGER}, #{memberId,jdbcType=INTEGER}, #{strategyId,jdbcType=INTEGER}, 
      #{serviceIp,jdbcType=VARCHAR}, #{servicePort,jdbcType=VARCHAR}, #{newIp,jdbcType=VARCHAR}, 
      #{newPort,jdbcType=VARCHAR}, #{startDate,jdbcType=DATE}, #{endDate,jdbcType=DATE}, 
      #{name,jdbcType=VARCHAR}, #{isUpdate,jdbcType=BIT}, #{status,jdbcType=BIT}, #{operationStatus,jdbcType=BIT}, 
      #{active,jdbcType=BIT}, #{deleted,jdbcType=BIT}, #{createdAt,jdbcType=TIMESTAMP}, 
      #{updatedAt,jdbcType=TIMESTAMP}, #{type,jdbcType=BIT})
  </insert>
  <update id="updateByPrimaryKey" parameterType="top.suilian.aio.model.Robot">
    update robot
    set member_id = #{memberId,jdbcType=INTEGER},
      strategy_id = #{strategyId,jdbcType=INTEGER},
      service_ip = #{serviceIp,jdbcType=VARCHAR},
      service_port = #{servicePort,jdbcType=VARCHAR},
      new_ip = #{newIp,jdbcType=VARCHAR},
      new_port = #{newPort,jdbcType=VARCHAR},
      start_date = #{startDate,jdbcType=DATE},
      end_date = #{endDate,jdbcType=DATE},
      name = #{name,jdbcType=VARCHAR},
      is_update = #{isUpdate,jdbcType=BIT},
      status = #{status,jdbcType=BIT},
      operation_status = #{operationStatus,jdbcType=BIT},
      active = #{active,jdbcType=BIT},
      deleted = #{deleted,jdbcType=BIT},
      created_at = #{createdAt,jdbcType=TIMESTAMP},
      updated_at = sysdate(),
      type = #{type,jdbcType=BIT}
    where robot_id = #{robotId,jdbcType=INTEGER}
  </update>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select robot_id, member_id, strategy_id, service_ip, service_port, new_ip, new_port, 
    start_date, end_date, name, is_update, status, operation_status, active, deleted, 
    created_at, updated_at, type
    from robot
    where robot_id = #{robotId,jdbcType=INTEGER}
  </select>
  <select id="selectAll" resultMap="BaseResultMap">
    select robot_id, member_id, strategy_id, service_ip, service_port, new_ip, new_port, 
    start_date, end_date, name, is_update, status, operation_status, active, deleted, 
    created_at, updated_at, type
    from robot
  </select>


  <select id="findByMemberId" resultMap="BaseResultMap">
    select robot_id, member_id, strategy_id, service_ip, service_port, new_ip, new_port,
    start_date, end_date, name, is_update, status, operation_status, active, deleted,
    created_at, updated_at, type
    from robot where member_id = #{memberId}
  </select>
</mapper>